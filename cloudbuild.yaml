# Build the Docker image using the 'gcr.io/cloud-builders/docker' image.
# The image tag is 'us-west1-docker.pkg.dev/${PROJECT_ID}/my-docker-repo/my-image'.
# The build context is '.' (the current directory).
steps:
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'us-west1-docker.pkg.dev/${PROJECT_ID}/my-docker-repo/my-image', '.']

# Push the built image to Artifact Registry using the 'gcr.io/cloud-builders/docker' image.
# The image tag is 'us-west1-docker.pkg.dev/${PROJECT_ID}/my-docker-repo/my-image'.
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'us-west1-docker.pkg.dev/${PROJECT_ID}/my-docker-repo/my-image']


# Step 3: Deploy the image to Cloud Run
# This step uses the Cloud SDK Docker image to run the gcloud CLI.
# It deploys the container image stored in Artifact Registry to a Cloud Run service.
# The service name is 'tasky-app-via-cloudbuild'.
# The container image path is 'us-west1-docker.pkg.dev/containers-lab-435221/my-docker-repo/my-image'.
# The service will be deployed in the 'us-west1' region on the fully managed Cloud Run platform.
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: 'gcloud'
  args:
    - 'run'
    - 'deploy'
    - 'tasky-app-via-cloudbuild'
    - '--image'
    - 'us-west1-docker.pkg.dev/containers-lab-435221/my-docker-repo/my-image'
    - '--region'
    - 'us-west1'
    - '--platform'
    - 'managed'
    - '--allow-unauthenticated'


# Configure Cloud Build to store build logs in Cloud Logging.
options:
  logging: CLOUD_LOGGING_ONLY
